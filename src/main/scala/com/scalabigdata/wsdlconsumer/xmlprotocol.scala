// Generated by <a href="http://scalaxb.org/">scalaxb</a>.
package com.scalabigdata.wsdlconsumer

import scala.concurrent.Future


/**
usage:
val obj = scalaxb.fromXML[wsdlconsumer.Foo](node)
val document = scalaxb.toXML[wsdlconsumer.Foo](obj, "foo", wsdlconsumer.defaultScope)
**/
object `package` extends XMLProtocol { }

trait XMLProtocol extends scalaxb.XMLStandardTypes {
  implicit lazy val executionContext = scala.concurrent.ExecutionContext.Implicits.global

  val defaultScope = scalaxb.toScope(None -> "http://tempuri.org/",
    Some("tns") -> "http://tempuri.org/",
    Some("xs") -> "http://www.w3.org/2001/XMLSchema",
    Some("xsi") -> "http://www.w3.org/2001/XMLSchema-instance")
  implicit lazy val Wsdlconsumer_CalcPrecoPrazoFormat: scalaxb.XMLFormat[wsdlconsumer.CalcPrecoPrazo] = new DefaultWsdlconsumer_CalcPrecoPrazoFormat {}
  implicit lazy val Wsdlconsumer_CalcPrecoPrazoResponseFormat: scalaxb.XMLFormat[wsdlconsumer.CalcPrecoPrazoResponse] = new DefaultWsdlconsumer_CalcPrecoPrazoResponseFormat {}
  implicit lazy val Wsdlconsumer_CResultadoFormat: scalaxb.XMLFormat[wsdlconsumer.CResultado] = new DefaultWsdlconsumer_CResultadoFormat {}
  implicit lazy val Wsdlconsumer_ArrayOfCServicoFormat: scalaxb.XMLFormat[wsdlconsumer.ArrayOfCServico] = new DefaultWsdlconsumer_ArrayOfCServicoFormat {}
  implicit lazy val Wsdlconsumer_CServicoFormat: scalaxb.XMLFormat[wsdlconsumer.CServico] = new DefaultWsdlconsumer_CServicoFormat {}
  implicit lazy val Wsdlconsumer_CalcPrecoPrazoDataFormat: scalaxb.XMLFormat[wsdlconsumer.CalcPrecoPrazoData] = new DefaultWsdlconsumer_CalcPrecoPrazoDataFormat {}
  implicit lazy val Wsdlconsumer_CalcPrecoPrazoDataResponseFormat: scalaxb.XMLFormat[wsdlconsumer.CalcPrecoPrazoDataResponse] = new DefaultWsdlconsumer_CalcPrecoPrazoDataResponseFormat {}
  implicit lazy val Wsdlconsumer_CalcPrecoPrazoRestricaoFormat: scalaxb.XMLFormat[wsdlconsumer.CalcPrecoPrazoRestricao] = new DefaultWsdlconsumer_CalcPrecoPrazoRestricaoFormat {}
  implicit lazy val Wsdlconsumer_CalcPrecoPrazoRestricaoResponseFormat: scalaxb.XMLFormat[wsdlconsumer.CalcPrecoPrazoRestricaoResponse] = new DefaultWsdlconsumer_CalcPrecoPrazoRestricaoResponseFormat {}
  implicit lazy val Wsdlconsumer_CalcPrecoFormat: scalaxb.XMLFormat[wsdlconsumer.CalcPreco] = new DefaultWsdlconsumer_CalcPrecoFormat {}
  implicit lazy val Wsdlconsumer_CalcPrecoResponseFormat: scalaxb.XMLFormat[wsdlconsumer.CalcPrecoResponse] = new DefaultWsdlconsumer_CalcPrecoResponseFormat {}
  implicit lazy val Wsdlconsumer_CalcPrecoDataFormat: scalaxb.XMLFormat[wsdlconsumer.CalcPrecoData] = new DefaultWsdlconsumer_CalcPrecoDataFormat {}
  implicit lazy val Wsdlconsumer_CalcPrecoDataResponseFormat: scalaxb.XMLFormat[wsdlconsumer.CalcPrecoDataResponse] = new DefaultWsdlconsumer_CalcPrecoDataResponseFormat {}
  implicit lazy val Wsdlconsumer_CalcPrazoFormat: scalaxb.XMLFormat[wsdlconsumer.CalcPrazo] = new DefaultWsdlconsumer_CalcPrazoFormat {}
  implicit lazy val Wsdlconsumer_CalcPrazoResponseFormat: scalaxb.XMLFormat[wsdlconsumer.CalcPrazoResponse] = new DefaultWsdlconsumer_CalcPrazoResponseFormat {}
  implicit lazy val Wsdlconsumer_CalcPrazoDataFormat: scalaxb.XMLFormat[wsdlconsumer.CalcPrazoData] = new DefaultWsdlconsumer_CalcPrazoDataFormat {}
  implicit lazy val Wsdlconsumer_CalcPrazoDataResponseFormat: scalaxb.XMLFormat[wsdlconsumer.CalcPrazoDataResponse] = new DefaultWsdlconsumer_CalcPrazoDataResponseFormat {}
  implicit lazy val Wsdlconsumer_CalcPrazoRestricaoFormat: scalaxb.XMLFormat[wsdlconsumer.CalcPrazoRestricao] = new DefaultWsdlconsumer_CalcPrazoRestricaoFormat {}
  implicit lazy val Wsdlconsumer_CalcPrazoRestricaoResponseFormat: scalaxb.XMLFormat[wsdlconsumer.CalcPrazoRestricaoResponse] = new DefaultWsdlconsumer_CalcPrazoRestricaoResponseFormat {}
  implicit lazy val Wsdlconsumer_CalcPrecoFACFormat: scalaxb.XMLFormat[wsdlconsumer.CalcPrecoFAC] = new DefaultWsdlconsumer_CalcPrecoFACFormat {}
  implicit lazy val Wsdlconsumer_CalcPrecoFACResponseFormat: scalaxb.XMLFormat[wsdlconsumer.CalcPrecoFACResponse] = new DefaultWsdlconsumer_CalcPrecoFACResponseFormat {}
  implicit lazy val Wsdlconsumer_CalcDataMaximaFormat: scalaxb.XMLFormat[wsdlconsumer.CalcDataMaxima] = new DefaultWsdlconsumer_CalcDataMaximaFormat {}
  implicit lazy val Wsdlconsumer_CalcDataMaximaResponseFormat: scalaxb.XMLFormat[wsdlconsumer.CalcDataMaximaResponse] = new DefaultWsdlconsumer_CalcDataMaximaResponseFormat {}
  implicit lazy val Wsdlconsumer_CResultadoObjetoFormat: scalaxb.XMLFormat[wsdlconsumer.CResultadoObjeto] = new DefaultWsdlconsumer_CResultadoObjetoFormat {}
  implicit lazy val Wsdlconsumer_ArrayOfCObjetoFormat: scalaxb.XMLFormat[wsdlconsumer.ArrayOfCObjeto] = new DefaultWsdlconsumer_ArrayOfCObjetoFormat {}
  implicit lazy val Wsdlconsumer_CObjetoFormat: scalaxb.XMLFormat[wsdlconsumer.CObjeto] = new DefaultWsdlconsumer_CObjetoFormat {}
  implicit lazy val Wsdlconsumer_ListaServicosFormat: scalaxb.XMLFormat[wsdlconsumer.ListaServicos] = new DefaultWsdlconsumer_ListaServicosFormat {}
  implicit lazy val Wsdlconsumer_ListaServicosResponseFormat: scalaxb.XMLFormat[wsdlconsumer.ListaServicosResponse] = new DefaultWsdlconsumer_ListaServicosResponseFormat {}
  implicit lazy val Wsdlconsumer_CResultadoServicosFormat: scalaxb.XMLFormat[wsdlconsumer.CResultadoServicos] = new DefaultWsdlconsumer_CResultadoServicosFormat {}
  implicit lazy val Wsdlconsumer_ArrayOfCServicosCalculoFormat: scalaxb.XMLFormat[wsdlconsumer.ArrayOfCServicosCalculo] = new DefaultWsdlconsumer_ArrayOfCServicosCalculoFormat {}
  implicit lazy val Wsdlconsumer_CServicosCalculoFormat: scalaxb.XMLFormat[wsdlconsumer.CServicosCalculo] = new DefaultWsdlconsumer_CServicosCalculoFormat {}


  implicit val fromAnySchemaType: scala.xml.Elem => Option[scalaxb.DataRecord[Any]] = {elem =>
    import scalaxb.{Helper, DataRecord, fromXML}

    val ns = Helper.nullOrEmpty(elem.scope.getURI(elem.prefix))
    val key = Some(elem.label)
    val (xsns, xstype) = Helper.instanceType(elem)

    (key, ns) match {
      case (Some("cResultadoServicos"), Some("http://tempuri.org/") | None) => Some(DataRecord(ns, key, xsns, xstype, fromXML[wsdlconsumer.CResultadoServicos](elem)))
      case (Some("cResultado"), Some("http://tempuri.org/") | None) => Some(DataRecord(ns, key, xsns, xstype, fromXML[wsdlconsumer.CResultado](elem)))
      case (Some("ListaServicos"), Some("http://tempuri.org/") | None) => Some(DataRecord(ns, key, xsns, xstype, fromXML[wsdlconsumer.ListaServicos](elem)))
      case (Some("CalcDataMaxima"), Some("http://tempuri.org/") | None) => Some(DataRecord(ns, key, xsns, xstype, fromXML[wsdlconsumer.CalcDataMaxima](elem)))
      case (Some("CalcPrecoFAC"), Some("http://tempuri.org/") | None) => Some(DataRecord(ns, key, xsns, xstype, fromXML[wsdlconsumer.CalcPrecoFAC](elem)))
      case (Some("CalcPrazoRestricao"), Some("http://tempuri.org/") | None) => Some(DataRecord(ns, key, xsns, xstype, fromXML[wsdlconsumer.CalcPrazoRestricao](elem)))
      case (Some("CalcPrazoData"), Some("http://tempuri.org/") | None) => Some(DataRecord(ns, key, xsns, xstype, fromXML[wsdlconsumer.CalcPrazoData](elem)))
      case (Some("CalcPrazo"), Some("http://tempuri.org/") | None) => Some(DataRecord(ns, key, xsns, xstype, fromXML[wsdlconsumer.CalcPrazo](elem)))
      case (Some("CalcPrecoData"), Some("http://tempuri.org/") | None) => Some(DataRecord(ns, key, xsns, xstype, fromXML[wsdlconsumer.CalcPrecoData](elem)))
      case (Some("CalcPreco"), Some("http://tempuri.org/") | None) => Some(DataRecord(ns, key, xsns, xstype, fromXML[wsdlconsumer.CalcPreco](elem)))
      case (Some("CalcPrecoPrazoRestricao"), Some("http://tempuri.org/") | None) => Some(DataRecord(ns, key, xsns, xstype, fromXML[wsdlconsumer.CalcPrecoPrazoRestricao](elem)))
      case (Some("CalcPrecoPrazoData"), Some("http://tempuri.org/") | None) => Some(DataRecord(ns, key, xsns, xstype, fromXML[wsdlconsumer.CalcPrecoPrazoData](elem)))
      case (Some("CalcPrecoPrazo"), Some("http://tempuri.org/") | None) => Some(DataRecord(ns, key, xsns, xstype, fromXML[wsdlconsumer.CalcPrecoPrazo](elem)))
      case (Some("CalcPrecoPrazoResponse"), Some("http://tempuri.org/") | None) => Some(DataRecord(ns, key, xsns, xstype, fromXML[wsdlconsumer.CalcPrecoPrazoResponse](elem)))
      case (Some("CalcPrecoPrazoDataResponse"), Some("http://tempuri.org/") | None) => Some(DataRecord(ns, key, xsns, xstype, fromXML[wsdlconsumer.CalcPrecoPrazoDataResponse](elem)))
      case (Some("CalcPrecoPrazoRestricaoResponse"), Some("http://tempuri.org/") | None) => Some(DataRecord(ns, key, xsns, xstype, fromXML[wsdlconsumer.CalcPrecoPrazoRestricaoResponse](elem)))
      case (Some("CalcPrecoResponse"), Some("http://tempuri.org/") | None) => Some(DataRecord(ns, key, xsns, xstype, fromXML[wsdlconsumer.CalcPrecoResponse](elem)))
      case (Some("CalcPrecoDataResponse"), Some("http://tempuri.org/") | None) => Some(DataRecord(ns, key, xsns, xstype, fromXML[wsdlconsumer.CalcPrecoDataResponse](elem)))
      case (Some("CalcPrazoResponse"), Some("http://tempuri.org/") | None) => Some(DataRecord(ns, key, xsns, xstype, fromXML[wsdlconsumer.CalcPrazoResponse](elem)))
      case (Some("CalcPrazoDataResponse"), Some("http://tempuri.org/") | None) => Some(DataRecord(ns, key, xsns, xstype, fromXML[wsdlconsumer.CalcPrazoDataResponse](elem)))
      case (Some("CalcPrazoRestricaoResponse"), Some("http://tempuri.org/") | None) => Some(DataRecord(ns, key, xsns, xstype, fromXML[wsdlconsumer.CalcPrazoRestricaoResponse](elem)))
      case (Some("CalcPrecoFACResponse"), Some("http://tempuri.org/") | None) => Some(DataRecord(ns, key, xsns, xstype, fromXML[wsdlconsumer.CalcPrecoFACResponse](elem)))
      case (Some("CalcDataMaximaResponse"), Some("http://tempuri.org/") | None) => Some(DataRecord(ns, key, xsns, xstype, fromXML[wsdlconsumer.CalcDataMaximaResponse](elem)))
      case (Some("ListaServicosResponse"), Some("http://tempuri.org/") | None) => Some(DataRecord(ns, key, xsns, xstype, fromXML[wsdlconsumer.ListaServicosResponse](elem)))
      case (Some("cResultadoObjeto"), Some("http://tempuri.org/") | None) => Some(DataRecord(ns, key, xsns, xstype, fromXML[wsdlconsumer.CResultadoObjeto](elem)))

      case _ => None
    }
  }

  trait DefaultWsdlconsumer_CalcPrecoPrazoFormat extends scalaxb.ElemNameParser[wsdlconsumer.CalcPrecoPrazo] {
    val targetNamespace: Option[String] = Some("http://tempuri.org/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[wsdlconsumer.CalcPrecoPrazo] =
      phrase(opt(scalaxb.ElemName(Some("http://tempuri.org/"), "nCdEmpresa")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "sDsSenha")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "nCdServico")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "sCepOrigem")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "sCepDestino")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "nVlPeso")) ~ 
      (scalaxb.ElemName(Some("http://tempuri.org/"), "nCdFormato")) ~ 
      (scalaxb.ElemName(Some("http://tempuri.org/"), "nVlComprimento")) ~ 
      (scalaxb.ElemName(Some("http://tempuri.org/"), "nVlAltura")) ~ 
      (scalaxb.ElemName(Some("http://tempuri.org/"), "nVlLargura")) ~ 
      (scalaxb.ElemName(Some("http://tempuri.org/"), "nVlDiametro")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "sCdMaoPropria")) ~ 
      (scalaxb.ElemName(Some("http://tempuri.org/"), "nVlValorDeclarado")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "sCdAvisoRecebimento")) ^^
      { case p1 ~ p2 ~ p3 ~ p4 ~ p5 ~ p6 ~ p7 ~ p8 ~ p9 ~ p10 ~ p11 ~ p12 ~ p13 ~ p14 =>
      wsdlconsumer.CalcPrecoPrazo(p1.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p2.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p3.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p4.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p5.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p6.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        scalaxb.fromXML[Int](p7, scalaxb.ElemName(node) :: stack),
        scalaxb.fromXML[BigDecimal](p8, scalaxb.ElemName(node) :: stack),
        scalaxb.fromXML[BigDecimal](p9, scalaxb.ElemName(node) :: stack),
        scalaxb.fromXML[BigDecimal](p10, scalaxb.ElemName(node) :: stack),
        scalaxb.fromXML[BigDecimal](p11, scalaxb.ElemName(node) :: stack),
        p12.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        scalaxb.fromXML[BigDecimal](p13, scalaxb.ElemName(node) :: stack),
        p14.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: wsdlconsumer.CalcPrecoPrazo, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(__obj.nCdEmpresa map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("nCdEmpresa"), __scope, false) } getOrElse {Nil},
        __obj.sDsSenha map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("sDsSenha"), __scope, false) } getOrElse {Nil},
        __obj.nCdServico map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("nCdServico"), __scope, false) } getOrElse {Nil},
        __obj.sCepOrigem map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("sCepOrigem"), __scope, false) } getOrElse {Nil},
        __obj.sCepDestino map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("sCepDestino"), __scope, false) } getOrElse {Nil},
        __obj.nVlPeso map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("nVlPeso"), __scope, false) } getOrElse {Nil},
        scalaxb.toXML[Int](__obj.nCdFormato, Some("http://tempuri.org/"), Some("nCdFormato"), __scope, false),
        scalaxb.toXML[BigDecimal](__obj.nVlComprimento, Some("http://tempuri.org/"), Some("nVlComprimento"), __scope, false),
        scalaxb.toXML[BigDecimal](__obj.nVlAltura, Some("http://tempuri.org/"), Some("nVlAltura"), __scope, false),
        scalaxb.toXML[BigDecimal](__obj.nVlLargura, Some("http://tempuri.org/"), Some("nVlLargura"), __scope, false),
        scalaxb.toXML[BigDecimal](__obj.nVlDiametro, Some("http://tempuri.org/"), Some("nVlDiametro"), __scope, false),
        __obj.sCdMaoPropria map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("sCdMaoPropria"), __scope, false) } getOrElse {Nil},
        scalaxb.toXML[BigDecimal](__obj.nVlValorDeclarado, Some("http://tempuri.org/"), Some("nVlValorDeclarado"), __scope, false),
        __obj.sCdAvisoRecebimento map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("sCdAvisoRecebimento"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultWsdlconsumer_CalcPrecoPrazoResponseFormat extends scalaxb.ElemNameParser[wsdlconsumer.CalcPrecoPrazoResponse] {
    val targetNamespace: Option[String] = Some("http://tempuri.org/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[wsdlconsumer.CalcPrecoPrazoResponse] =
      phrase((scalaxb.ElemName(Some("http://tempuri.org/"), "CalcPrecoPrazoResult")) ^^
      { case p1 =>
      wsdlconsumer.CalcPrecoPrazoResponse(scalaxb.fromXML[wsdlconsumer.CResultado](p1, scalaxb.ElemName(node) :: stack)) })
    
    def writesChildNodes(__obj: wsdlconsumer.CalcPrecoPrazoResponse, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (scalaxb.toXML[wsdlconsumer.CResultado](__obj.CalcPrecoPrazoResult, Some("http://tempuri.org/"), Some("CalcPrecoPrazoResult"), __scope, false))

  }

  trait DefaultWsdlconsumer_CResultadoFormat extends scalaxb.ElemNameParser[wsdlconsumer.CResultado] {
    val targetNamespace: Option[String] = Some("http://tempuri.org/")
    
    override def typeName: Option[String] = Some("cResultado")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[wsdlconsumer.CResultado] =
      phrase(opt(scalaxb.ElemName(Some("http://tempuri.org/"), "Servicos")) ^^
      { case p1 =>
      wsdlconsumer.CResultado(p1.headOption map { scalaxb.fromXML[wsdlconsumer.ArrayOfCServico](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: wsdlconsumer.CResultado, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (__obj.Servicos map { scalaxb.toXML[wsdlconsumer.ArrayOfCServico](_, Some("http://tempuri.org/"), Some("Servicos"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultWsdlconsumer_ArrayOfCServicoFormat extends scalaxb.ElemNameParser[wsdlconsumer.ArrayOfCServico] {
    val targetNamespace: Option[String] = Some("http://tempuri.org/")
    
    override def typeName: Option[String] = Some("ArrayOfCServico")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[wsdlconsumer.ArrayOfCServico] =
      phrase(safeRep(scalaxb.ElemName(Some("http://tempuri.org/"), "cServico")) ^^
      { case p1 =>
      wsdlconsumer.ArrayOfCServico(p1 map { scalaxb.fromXML[wsdlconsumer.CServico](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: wsdlconsumer.ArrayOfCServico, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (__obj.cServico flatMap { scalaxb.toXML[wsdlconsumer.CServico](_, Some("http://tempuri.org/"), Some("cServico"), __scope, false) })

  }

  trait DefaultWsdlconsumer_CServicoFormat extends scalaxb.ElemNameParser[wsdlconsumer.CServico] {
    val targetNamespace: Option[String] = Some("http://tempuri.org/")
    
    override def typeName: Option[String] = Some("cServico")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[wsdlconsumer.CServico] =
      phrase((scalaxb.ElemName(Some("http://tempuri.org/"), "Codigo")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "Valor")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "PrazoEntrega")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "ValorMaoPropria")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "ValorAvisoRecebimento")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "ValorValorDeclarado")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "EntregaDomiciliar")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "EntregaSabado")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "Erro")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "MsgErro")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "ValorSemAdicionais")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "obsFim")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "DataMaxEntrega")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "HoraMaxEntrega")) ^^
      { case p1 ~ p2 ~ p3 ~ p4 ~ p5 ~ p6 ~ p7 ~ p8 ~ p9 ~ p10 ~ p11 ~ p12 ~ p13 ~ p14 =>
      wsdlconsumer.CServico(scalaxb.fromXML[Int](p1, scalaxb.ElemName(node) :: stack),
        p2.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p3.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p4.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p5.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p6.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p7.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p8.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p9.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p10.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p11.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p12.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p13.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p14.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: wsdlconsumer.CServico, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(scalaxb.toXML[Int](__obj.Codigo, Some("http://tempuri.org/"), Some("Codigo"), __scope, false),
        __obj.Valor map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("Valor"), __scope, false) } getOrElse {Nil},
        __obj.PrazoEntrega map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("PrazoEntrega"), __scope, false) } getOrElse {Nil},
        __obj.ValorMaoPropria map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("ValorMaoPropria"), __scope, false) } getOrElse {Nil},
        __obj.ValorAvisoRecebimento map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("ValorAvisoRecebimento"), __scope, false) } getOrElse {Nil},
        __obj.ValorValorDeclarado map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("ValorValorDeclarado"), __scope, false) } getOrElse {Nil},
        __obj.EntregaDomiciliar map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("EntregaDomiciliar"), __scope, false) } getOrElse {Nil},
        __obj.EntregaSabado map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("EntregaSabado"), __scope, false) } getOrElse {Nil},
        __obj.Erro map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("Erro"), __scope, false) } getOrElse {Nil},
        __obj.MsgErro map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("MsgErro"), __scope, false) } getOrElse {Nil},
        __obj.ValorSemAdicionais map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("ValorSemAdicionais"), __scope, false) } getOrElse {Nil},
        __obj.obsFim map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("obsFim"), __scope, false) } getOrElse {Nil},
        __obj.DataMaxEntrega map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("DataMaxEntrega"), __scope, false) } getOrElse {Nil},
        __obj.HoraMaxEntrega map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("HoraMaxEntrega"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultWsdlconsumer_CalcPrecoPrazoDataFormat extends scalaxb.ElemNameParser[wsdlconsumer.CalcPrecoPrazoData] {
    val targetNamespace: Option[String] = Some("http://tempuri.org/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[wsdlconsumer.CalcPrecoPrazoData] =
      phrase(opt(scalaxb.ElemName(Some("http://tempuri.org/"), "nCdEmpresa")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "sDsSenha")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "nCdServico")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "sCepOrigem")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "sCepDestino")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "nVlPeso")) ~ 
      (scalaxb.ElemName(Some("http://tempuri.org/"), "nCdFormato")) ~ 
      (scalaxb.ElemName(Some("http://tempuri.org/"), "nVlComprimento")) ~ 
      (scalaxb.ElemName(Some("http://tempuri.org/"), "nVlAltura")) ~ 
      (scalaxb.ElemName(Some("http://tempuri.org/"), "nVlLargura")) ~ 
      (scalaxb.ElemName(Some("http://tempuri.org/"), "nVlDiametro")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "sCdMaoPropria")) ~ 
      (scalaxb.ElemName(Some("http://tempuri.org/"), "nVlValorDeclarado")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "sCdAvisoRecebimento")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "sDtCalculo")) ^^
      { case p1 ~ p2 ~ p3 ~ p4 ~ p5 ~ p6 ~ p7 ~ p8 ~ p9 ~ p10 ~ p11 ~ p12 ~ p13 ~ p14 ~ p15 =>
      wsdlconsumer.CalcPrecoPrazoData(p1.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p2.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p3.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p4.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p5.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p6.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        scalaxb.fromXML[Int](p7, scalaxb.ElemName(node) :: stack),
        scalaxb.fromXML[BigDecimal](p8, scalaxb.ElemName(node) :: stack),
        scalaxb.fromXML[BigDecimal](p9, scalaxb.ElemName(node) :: stack),
        scalaxb.fromXML[BigDecimal](p10, scalaxb.ElemName(node) :: stack),
        scalaxb.fromXML[BigDecimal](p11, scalaxb.ElemName(node) :: stack),
        p12.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        scalaxb.fromXML[BigDecimal](p13, scalaxb.ElemName(node) :: stack),
        p14.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p15.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: wsdlconsumer.CalcPrecoPrazoData, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(__obj.nCdEmpresa map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("nCdEmpresa"), __scope, false) } getOrElse {Nil},
        __obj.sDsSenha map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("sDsSenha"), __scope, false) } getOrElse {Nil},
        __obj.nCdServico map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("nCdServico"), __scope, false) } getOrElse {Nil},
        __obj.sCepOrigem map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("sCepOrigem"), __scope, false) } getOrElse {Nil},
        __obj.sCepDestino map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("sCepDestino"), __scope, false) } getOrElse {Nil},
        __obj.nVlPeso map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("nVlPeso"), __scope, false) } getOrElse {Nil},
        scalaxb.toXML[Int](__obj.nCdFormato, Some("http://tempuri.org/"), Some("nCdFormato"), __scope, false),
        scalaxb.toXML[BigDecimal](__obj.nVlComprimento, Some("http://tempuri.org/"), Some("nVlComprimento"), __scope, false),
        scalaxb.toXML[BigDecimal](__obj.nVlAltura, Some("http://tempuri.org/"), Some("nVlAltura"), __scope, false),
        scalaxb.toXML[BigDecimal](__obj.nVlLargura, Some("http://tempuri.org/"), Some("nVlLargura"), __scope, false),
        scalaxb.toXML[BigDecimal](__obj.nVlDiametro, Some("http://tempuri.org/"), Some("nVlDiametro"), __scope, false),
        __obj.sCdMaoPropria map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("sCdMaoPropria"), __scope, false) } getOrElse {Nil},
        scalaxb.toXML[BigDecimal](__obj.nVlValorDeclarado, Some("http://tempuri.org/"), Some("nVlValorDeclarado"), __scope, false),
        __obj.sCdAvisoRecebimento map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("sCdAvisoRecebimento"), __scope, false) } getOrElse {Nil},
        __obj.sDtCalculo map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("sDtCalculo"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultWsdlconsumer_CalcPrecoPrazoDataResponseFormat extends scalaxb.ElemNameParser[wsdlconsumer.CalcPrecoPrazoDataResponse] {
    val targetNamespace: Option[String] = Some("http://tempuri.org/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[wsdlconsumer.CalcPrecoPrazoDataResponse] =
      phrase((scalaxb.ElemName(Some("http://tempuri.org/"), "CalcPrecoPrazoDataResult")) ^^
      { case p1 =>
      wsdlconsumer.CalcPrecoPrazoDataResponse(scalaxb.fromXML[wsdlconsumer.CResultado](p1, scalaxb.ElemName(node) :: stack)) })
    
    def writesChildNodes(__obj: wsdlconsumer.CalcPrecoPrazoDataResponse, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (scalaxb.toXML[wsdlconsumer.CResultado](__obj.CalcPrecoPrazoDataResult, Some("http://tempuri.org/"), Some("CalcPrecoPrazoDataResult"), __scope, false))

  }

  trait DefaultWsdlconsumer_CalcPrecoPrazoRestricaoFormat extends scalaxb.ElemNameParser[wsdlconsumer.CalcPrecoPrazoRestricao] {
    val targetNamespace: Option[String] = Some("http://tempuri.org/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[wsdlconsumer.CalcPrecoPrazoRestricao] =
      phrase(opt(scalaxb.ElemName(Some("http://tempuri.org/"), "nCdEmpresa")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "sDsSenha")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "nCdServico")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "sCepOrigem")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "sCepDestino")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "nVlPeso")) ~ 
      (scalaxb.ElemName(Some("http://tempuri.org/"), "nCdFormato")) ~ 
      (scalaxb.ElemName(Some("http://tempuri.org/"), "nVlComprimento")) ~ 
      (scalaxb.ElemName(Some("http://tempuri.org/"), "nVlAltura")) ~ 
      (scalaxb.ElemName(Some("http://tempuri.org/"), "nVlLargura")) ~ 
      (scalaxb.ElemName(Some("http://tempuri.org/"), "nVlDiametro")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "sCdMaoPropria")) ~ 
      (scalaxb.ElemName(Some("http://tempuri.org/"), "nVlValorDeclarado")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "sCdAvisoRecebimento")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "sDtCalculo")) ^^
      { case p1 ~ p2 ~ p3 ~ p4 ~ p5 ~ p6 ~ p7 ~ p8 ~ p9 ~ p10 ~ p11 ~ p12 ~ p13 ~ p14 ~ p15 =>
      wsdlconsumer.CalcPrecoPrazoRestricao(p1.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p2.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p3.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p4.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p5.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p6.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        scalaxb.fromXML[Int](p7, scalaxb.ElemName(node) :: stack),
        scalaxb.fromXML[BigDecimal](p8, scalaxb.ElemName(node) :: stack),
        scalaxb.fromXML[BigDecimal](p9, scalaxb.ElemName(node) :: stack),
        scalaxb.fromXML[BigDecimal](p10, scalaxb.ElemName(node) :: stack),
        scalaxb.fromXML[BigDecimal](p11, scalaxb.ElemName(node) :: stack),
        p12.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        scalaxb.fromXML[BigDecimal](p13, scalaxb.ElemName(node) :: stack),
        p14.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p15.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: wsdlconsumer.CalcPrecoPrazoRestricao, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(__obj.nCdEmpresa map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("nCdEmpresa"), __scope, false) } getOrElse {Nil},
        __obj.sDsSenha map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("sDsSenha"), __scope, false) } getOrElse {Nil},
        __obj.nCdServico map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("nCdServico"), __scope, false) } getOrElse {Nil},
        __obj.sCepOrigem map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("sCepOrigem"), __scope, false) } getOrElse {Nil},
        __obj.sCepDestino map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("sCepDestino"), __scope, false) } getOrElse {Nil},
        __obj.nVlPeso map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("nVlPeso"), __scope, false) } getOrElse {Nil},
        scalaxb.toXML[Int](__obj.nCdFormato, Some("http://tempuri.org/"), Some("nCdFormato"), __scope, false),
        scalaxb.toXML[BigDecimal](__obj.nVlComprimento, Some("http://tempuri.org/"), Some("nVlComprimento"), __scope, false),
        scalaxb.toXML[BigDecimal](__obj.nVlAltura, Some("http://tempuri.org/"), Some("nVlAltura"), __scope, false),
        scalaxb.toXML[BigDecimal](__obj.nVlLargura, Some("http://tempuri.org/"), Some("nVlLargura"), __scope, false),
        scalaxb.toXML[BigDecimal](__obj.nVlDiametro, Some("http://tempuri.org/"), Some("nVlDiametro"), __scope, false),
        __obj.sCdMaoPropria map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("sCdMaoPropria"), __scope, false) } getOrElse {Nil},
        scalaxb.toXML[BigDecimal](__obj.nVlValorDeclarado, Some("http://tempuri.org/"), Some("nVlValorDeclarado"), __scope, false),
        __obj.sCdAvisoRecebimento map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("sCdAvisoRecebimento"), __scope, false) } getOrElse {Nil},
        __obj.sDtCalculo map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("sDtCalculo"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultWsdlconsumer_CalcPrecoPrazoRestricaoResponseFormat extends scalaxb.ElemNameParser[wsdlconsumer.CalcPrecoPrazoRestricaoResponse] {
    val targetNamespace: Option[String] = Some("http://tempuri.org/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[wsdlconsumer.CalcPrecoPrazoRestricaoResponse] =
      phrase((scalaxb.ElemName(Some("http://tempuri.org/"), "CalcPrecoPrazoRestricaoResult")) ^^
      { case p1 =>
      wsdlconsumer.CalcPrecoPrazoRestricaoResponse(scalaxb.fromXML[wsdlconsumer.CResultado](p1, scalaxb.ElemName(node) :: stack)) })
    
    def writesChildNodes(__obj: wsdlconsumer.CalcPrecoPrazoRestricaoResponse, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (scalaxb.toXML[wsdlconsumer.CResultado](__obj.CalcPrecoPrazoRestricaoResult, Some("http://tempuri.org/"), Some("CalcPrecoPrazoRestricaoResult"), __scope, false))

  }

  trait DefaultWsdlconsumer_CalcPrecoFormat extends scalaxb.ElemNameParser[wsdlconsumer.CalcPreco] {
    val targetNamespace: Option[String] = Some("http://tempuri.org/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[wsdlconsumer.CalcPreco] =
      phrase(opt(scalaxb.ElemName(Some("http://tempuri.org/"), "nCdEmpresa")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "sDsSenha")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "nCdServico")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "sCepOrigem")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "sCepDestino")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "nVlPeso")) ~ 
      (scalaxb.ElemName(Some("http://tempuri.org/"), "nCdFormato")) ~ 
      (scalaxb.ElemName(Some("http://tempuri.org/"), "nVlComprimento")) ~ 
      (scalaxb.ElemName(Some("http://tempuri.org/"), "nVlAltura")) ~ 
      (scalaxb.ElemName(Some("http://tempuri.org/"), "nVlLargura")) ~ 
      (scalaxb.ElemName(Some("http://tempuri.org/"), "nVlDiametro")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "sCdMaoPropria")) ~ 
      (scalaxb.ElemName(Some("http://tempuri.org/"), "nVlValorDeclarado")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "sCdAvisoRecebimento")) ^^
      { case p1 ~ p2 ~ p3 ~ p4 ~ p5 ~ p6 ~ p7 ~ p8 ~ p9 ~ p10 ~ p11 ~ p12 ~ p13 ~ p14 =>
      wsdlconsumer.CalcPreco(p1.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p2.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p3.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p4.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p5.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p6.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        scalaxb.fromXML[Int](p7, scalaxb.ElemName(node) :: stack),
        scalaxb.fromXML[BigDecimal](p8, scalaxb.ElemName(node) :: stack),
        scalaxb.fromXML[BigDecimal](p9, scalaxb.ElemName(node) :: stack),
        scalaxb.fromXML[BigDecimal](p10, scalaxb.ElemName(node) :: stack),
        scalaxb.fromXML[BigDecimal](p11, scalaxb.ElemName(node) :: stack),
        p12.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        scalaxb.fromXML[BigDecimal](p13, scalaxb.ElemName(node) :: stack),
        p14.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: wsdlconsumer.CalcPreco, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(__obj.nCdEmpresa map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("nCdEmpresa"), __scope, false) } getOrElse {Nil},
        __obj.sDsSenha map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("sDsSenha"), __scope, false) } getOrElse {Nil},
        __obj.nCdServico map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("nCdServico"), __scope, false) } getOrElse {Nil},
        __obj.sCepOrigem map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("sCepOrigem"), __scope, false) } getOrElse {Nil},
        __obj.sCepDestino map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("sCepDestino"), __scope, false) } getOrElse {Nil},
        __obj.nVlPeso map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("nVlPeso"), __scope, false) } getOrElse {Nil},
        scalaxb.toXML[Int](__obj.nCdFormato, Some("http://tempuri.org/"), Some("nCdFormato"), __scope, false),
        scalaxb.toXML[BigDecimal](__obj.nVlComprimento, Some("http://tempuri.org/"), Some("nVlComprimento"), __scope, false),
        scalaxb.toXML[BigDecimal](__obj.nVlAltura, Some("http://tempuri.org/"), Some("nVlAltura"), __scope, false),
        scalaxb.toXML[BigDecimal](__obj.nVlLargura, Some("http://tempuri.org/"), Some("nVlLargura"), __scope, false),
        scalaxb.toXML[BigDecimal](__obj.nVlDiametro, Some("http://tempuri.org/"), Some("nVlDiametro"), __scope, false),
        __obj.sCdMaoPropria map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("sCdMaoPropria"), __scope, false) } getOrElse {Nil},
        scalaxb.toXML[BigDecimal](__obj.nVlValorDeclarado, Some("http://tempuri.org/"), Some("nVlValorDeclarado"), __scope, false),
        __obj.sCdAvisoRecebimento map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("sCdAvisoRecebimento"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultWsdlconsumer_CalcPrecoResponseFormat extends scalaxb.ElemNameParser[wsdlconsumer.CalcPrecoResponse] {
    val targetNamespace: Option[String] = Some("http://tempuri.org/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[wsdlconsumer.CalcPrecoResponse] =
      phrase((scalaxb.ElemName(Some("http://tempuri.org/"), "CalcPrecoResult")) ^^
      { case p1 =>
      wsdlconsumer.CalcPrecoResponse(scalaxb.fromXML[wsdlconsumer.CResultado](p1, scalaxb.ElemName(node) :: stack)) })
    
    def writesChildNodes(__obj: wsdlconsumer.CalcPrecoResponse, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (scalaxb.toXML[wsdlconsumer.CResultado](__obj.CalcPrecoResult, Some("http://tempuri.org/"), Some("CalcPrecoResult"), __scope, false))

  }

  trait DefaultWsdlconsumer_CalcPrecoDataFormat extends scalaxb.ElemNameParser[wsdlconsumer.CalcPrecoData] {
    val targetNamespace: Option[String] = Some("http://tempuri.org/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[wsdlconsumer.CalcPrecoData] =
      phrase(opt(scalaxb.ElemName(Some("http://tempuri.org/"), "nCdEmpresa")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "sDsSenha")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "nCdServico")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "sCepOrigem")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "sCepDestino")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "nVlPeso")) ~ 
      (scalaxb.ElemName(Some("http://tempuri.org/"), "nCdFormato")) ~ 
      (scalaxb.ElemName(Some("http://tempuri.org/"), "nVlComprimento")) ~ 
      (scalaxb.ElemName(Some("http://tempuri.org/"), "nVlAltura")) ~ 
      (scalaxb.ElemName(Some("http://tempuri.org/"), "nVlLargura")) ~ 
      (scalaxb.ElemName(Some("http://tempuri.org/"), "nVlDiametro")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "sCdMaoPropria")) ~ 
      (scalaxb.ElemName(Some("http://tempuri.org/"), "nVlValorDeclarado")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "sCdAvisoRecebimento")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "sDtCalculo")) ^^
      { case p1 ~ p2 ~ p3 ~ p4 ~ p5 ~ p6 ~ p7 ~ p8 ~ p9 ~ p10 ~ p11 ~ p12 ~ p13 ~ p14 ~ p15 =>
      wsdlconsumer.CalcPrecoData(p1.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p2.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p3.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p4.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p5.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p6.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        scalaxb.fromXML[Int](p7, scalaxb.ElemName(node) :: stack),
        scalaxb.fromXML[BigDecimal](p8, scalaxb.ElemName(node) :: stack),
        scalaxb.fromXML[BigDecimal](p9, scalaxb.ElemName(node) :: stack),
        scalaxb.fromXML[BigDecimal](p10, scalaxb.ElemName(node) :: stack),
        scalaxb.fromXML[BigDecimal](p11, scalaxb.ElemName(node) :: stack),
        p12.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        scalaxb.fromXML[BigDecimal](p13, scalaxb.ElemName(node) :: stack),
        p14.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p15.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: wsdlconsumer.CalcPrecoData, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(__obj.nCdEmpresa map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("nCdEmpresa"), __scope, false) } getOrElse {Nil},
        __obj.sDsSenha map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("sDsSenha"), __scope, false) } getOrElse {Nil},
        __obj.nCdServico map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("nCdServico"), __scope, false) } getOrElse {Nil},
        __obj.sCepOrigem map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("sCepOrigem"), __scope, false) } getOrElse {Nil},
        __obj.sCepDestino map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("sCepDestino"), __scope, false) } getOrElse {Nil},
        __obj.nVlPeso map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("nVlPeso"), __scope, false) } getOrElse {Nil},
        scalaxb.toXML[Int](__obj.nCdFormato, Some("http://tempuri.org/"), Some("nCdFormato"), __scope, false),
        scalaxb.toXML[BigDecimal](__obj.nVlComprimento, Some("http://tempuri.org/"), Some("nVlComprimento"), __scope, false),
        scalaxb.toXML[BigDecimal](__obj.nVlAltura, Some("http://tempuri.org/"), Some("nVlAltura"), __scope, false),
        scalaxb.toXML[BigDecimal](__obj.nVlLargura, Some("http://tempuri.org/"), Some("nVlLargura"), __scope, false),
        scalaxb.toXML[BigDecimal](__obj.nVlDiametro, Some("http://tempuri.org/"), Some("nVlDiametro"), __scope, false),
        __obj.sCdMaoPropria map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("sCdMaoPropria"), __scope, false) } getOrElse {Nil},
        scalaxb.toXML[BigDecimal](__obj.nVlValorDeclarado, Some("http://tempuri.org/"), Some("nVlValorDeclarado"), __scope, false),
        __obj.sCdAvisoRecebimento map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("sCdAvisoRecebimento"), __scope, false) } getOrElse {Nil},
        __obj.sDtCalculo map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("sDtCalculo"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultWsdlconsumer_CalcPrecoDataResponseFormat extends scalaxb.ElemNameParser[wsdlconsumer.CalcPrecoDataResponse] {
    val targetNamespace: Option[String] = Some("http://tempuri.org/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[wsdlconsumer.CalcPrecoDataResponse] =
      phrase((scalaxb.ElemName(Some("http://tempuri.org/"), "CalcPrecoDataResult")) ^^
      { case p1 =>
      wsdlconsumer.CalcPrecoDataResponse(scalaxb.fromXML[wsdlconsumer.CResultado](p1, scalaxb.ElemName(node) :: stack)) })
    
    def writesChildNodes(__obj: wsdlconsumer.CalcPrecoDataResponse, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (scalaxb.toXML[wsdlconsumer.CResultado](__obj.CalcPrecoDataResult, Some("http://tempuri.org/"), Some("CalcPrecoDataResult"), __scope, false))

  }

  trait DefaultWsdlconsumer_CalcPrazoFormat extends scalaxb.ElemNameParser[wsdlconsumer.CalcPrazo] {
    val targetNamespace: Option[String] = Some("http://tempuri.org/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[wsdlconsumer.CalcPrazo] =
      phrase(opt(scalaxb.ElemName(Some("http://tempuri.org/"), "nCdServico")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "sCepOrigem")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "sCepDestino")) ^^
      { case p1 ~ p2 ~ p3 =>
      wsdlconsumer.CalcPrazo(p1.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p2.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p3.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: wsdlconsumer.CalcPrazo, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(__obj.nCdServico map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("nCdServico"), __scope, false) } getOrElse {Nil},
        __obj.sCepOrigem map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("sCepOrigem"), __scope, false) } getOrElse {Nil},
        __obj.sCepDestino map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("sCepDestino"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultWsdlconsumer_CalcPrazoResponseFormat extends scalaxb.ElemNameParser[wsdlconsumer.CalcPrazoResponse] {
    val targetNamespace: Option[String] = Some("http://tempuri.org/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[wsdlconsumer.CalcPrazoResponse] =
      phrase((scalaxb.ElemName(Some("http://tempuri.org/"), "CalcPrazoResult")) ^^
      { case p1 =>
      wsdlconsumer.CalcPrazoResponse(scalaxb.fromXML[wsdlconsumer.CResultado](p1, scalaxb.ElemName(node) :: stack)) })
    
    def writesChildNodes(__obj: wsdlconsumer.CalcPrazoResponse, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (scalaxb.toXML[wsdlconsumer.CResultado](__obj.CalcPrazoResult, Some("http://tempuri.org/"), Some("CalcPrazoResult"), __scope, false))

  }

  trait DefaultWsdlconsumer_CalcPrazoDataFormat extends scalaxb.ElemNameParser[wsdlconsumer.CalcPrazoData] {
    val targetNamespace: Option[String] = Some("http://tempuri.org/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[wsdlconsumer.CalcPrazoData] =
      phrase(opt(scalaxb.ElemName(Some("http://tempuri.org/"), "nCdServico")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "sCepOrigem")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "sCepDestino")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "sDtCalculo")) ^^
      { case p1 ~ p2 ~ p3 ~ p4 =>
      wsdlconsumer.CalcPrazoData(p1.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p2.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p3.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p4.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: wsdlconsumer.CalcPrazoData, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(__obj.nCdServico map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("nCdServico"), __scope, false) } getOrElse {Nil},
        __obj.sCepOrigem map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("sCepOrigem"), __scope, false) } getOrElse {Nil},
        __obj.sCepDestino map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("sCepDestino"), __scope, false) } getOrElse {Nil},
        __obj.sDtCalculo map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("sDtCalculo"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultWsdlconsumer_CalcPrazoDataResponseFormat extends scalaxb.ElemNameParser[wsdlconsumer.CalcPrazoDataResponse] {
    val targetNamespace: Option[String] = Some("http://tempuri.org/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[wsdlconsumer.CalcPrazoDataResponse] =
      phrase((scalaxb.ElemName(Some("http://tempuri.org/"), "CalcPrazoDataResult")) ^^
      { case p1 =>
      wsdlconsumer.CalcPrazoDataResponse(scalaxb.fromXML[wsdlconsumer.CResultado](p1, scalaxb.ElemName(node) :: stack)) })
    
    def writesChildNodes(__obj: wsdlconsumer.CalcPrazoDataResponse, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (scalaxb.toXML[wsdlconsumer.CResultado](__obj.CalcPrazoDataResult, Some("http://tempuri.org/"), Some("CalcPrazoDataResult"), __scope, false))

  }

  trait DefaultWsdlconsumer_CalcPrazoRestricaoFormat extends scalaxb.ElemNameParser[wsdlconsumer.CalcPrazoRestricao] {
    val targetNamespace: Option[String] = Some("http://tempuri.org/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[wsdlconsumer.CalcPrazoRestricao] =
      phrase(opt(scalaxb.ElemName(Some("http://tempuri.org/"), "nCdServico")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "sCepOrigem")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "sCepDestino")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "sDtCalculo")) ^^
      { case p1 ~ p2 ~ p3 ~ p4 =>
      wsdlconsumer.CalcPrazoRestricao(p1.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p2.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p3.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p4.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: wsdlconsumer.CalcPrazoRestricao, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(__obj.nCdServico map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("nCdServico"), __scope, false) } getOrElse {Nil},
        __obj.sCepOrigem map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("sCepOrigem"), __scope, false) } getOrElse {Nil},
        __obj.sCepDestino map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("sCepDestino"), __scope, false) } getOrElse {Nil},
        __obj.sDtCalculo map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("sDtCalculo"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultWsdlconsumer_CalcPrazoRestricaoResponseFormat extends scalaxb.ElemNameParser[wsdlconsumer.CalcPrazoRestricaoResponse] {
    val targetNamespace: Option[String] = Some("http://tempuri.org/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[wsdlconsumer.CalcPrazoRestricaoResponse] =
      phrase((scalaxb.ElemName(Some("http://tempuri.org/"), "CalcPrazoRestricaoResult")) ^^
      { case p1 =>
      wsdlconsumer.CalcPrazoRestricaoResponse(scalaxb.fromXML[wsdlconsumer.CResultado](p1, scalaxb.ElemName(node) :: stack)) })
    
    def writesChildNodes(__obj: wsdlconsumer.CalcPrazoRestricaoResponse, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (scalaxb.toXML[wsdlconsumer.CResultado](__obj.CalcPrazoRestricaoResult, Some("http://tempuri.org/"), Some("CalcPrazoRestricaoResult"), __scope, false))

  }

  trait DefaultWsdlconsumer_CalcPrecoFACFormat extends scalaxb.ElemNameParser[wsdlconsumer.CalcPrecoFAC] {
    val targetNamespace: Option[String] = Some("http://tempuri.org/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[wsdlconsumer.CalcPrecoFAC] =
      phrase(opt(scalaxb.ElemName(Some("http://tempuri.org/"), "nCdServico")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "nVlPeso")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "strDataCalculo")) ^^
      { case p1 ~ p2 ~ p3 =>
      wsdlconsumer.CalcPrecoFAC(p1.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p2.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p3.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: wsdlconsumer.CalcPrecoFAC, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(__obj.nCdServico map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("nCdServico"), __scope, false) } getOrElse {Nil},
        __obj.nVlPeso map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("nVlPeso"), __scope, false) } getOrElse {Nil},
        __obj.strDataCalculo map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("strDataCalculo"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultWsdlconsumer_CalcPrecoFACResponseFormat extends scalaxb.ElemNameParser[wsdlconsumer.CalcPrecoFACResponse] {
    val targetNamespace: Option[String] = Some("http://tempuri.org/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[wsdlconsumer.CalcPrecoFACResponse] =
      phrase((scalaxb.ElemName(Some("http://tempuri.org/"), "CalcPrecoFACResult")) ^^
      { case p1 =>
      wsdlconsumer.CalcPrecoFACResponse(scalaxb.fromXML[wsdlconsumer.CResultado](p1, scalaxb.ElemName(node) :: stack)) })
    
    def writesChildNodes(__obj: wsdlconsumer.CalcPrecoFACResponse, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (scalaxb.toXML[wsdlconsumer.CResultado](__obj.CalcPrecoFACResult, Some("http://tempuri.org/"), Some("CalcPrecoFACResult"), __scope, false))

  }

  trait DefaultWsdlconsumer_CalcDataMaximaFormat extends scalaxb.ElemNameParser[wsdlconsumer.CalcDataMaxima] {
    val targetNamespace: Option[String] = Some("http://tempuri.org/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[wsdlconsumer.CalcDataMaxima] =
      phrase(opt(scalaxb.ElemName(Some("http://tempuri.org/"), "codigoObjeto")) ^^
      { case p1 =>
      wsdlconsumer.CalcDataMaxima(p1.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: wsdlconsumer.CalcDataMaxima, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (__obj.codigoObjeto map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("codigoObjeto"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultWsdlconsumer_CalcDataMaximaResponseFormat extends scalaxb.ElemNameParser[wsdlconsumer.CalcDataMaximaResponse] {
    val targetNamespace: Option[String] = Some("http://tempuri.org/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[wsdlconsumer.CalcDataMaximaResponse] =
      phrase((scalaxb.ElemName(Some("http://tempuri.org/"), "CalcDataMaximaResult")) ^^
      { case p1 =>
      wsdlconsumer.CalcDataMaximaResponse(scalaxb.fromXML[wsdlconsumer.CResultadoObjeto](p1, scalaxb.ElemName(node) :: stack)) })
    
    def writesChildNodes(__obj: wsdlconsumer.CalcDataMaximaResponse, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (scalaxb.toXML[wsdlconsumer.CResultadoObjeto](__obj.CalcDataMaximaResult, Some("http://tempuri.org/"), Some("CalcDataMaximaResult"), __scope, false))

  }

  trait DefaultWsdlconsumer_CResultadoObjetoFormat extends scalaxb.ElemNameParser[wsdlconsumer.CResultadoObjeto] {
    val targetNamespace: Option[String] = Some("http://tempuri.org/")
    
    override def typeName: Option[String] = Some("cResultadoObjeto")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[wsdlconsumer.CResultadoObjeto] =
      phrase(opt(scalaxb.ElemName(Some("http://tempuri.org/"), "Objetos")) ^^
      { case p1 =>
      wsdlconsumer.CResultadoObjeto(p1.headOption map { scalaxb.fromXML[wsdlconsumer.ArrayOfCObjeto](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: wsdlconsumer.CResultadoObjeto, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (__obj.Objetos map { scalaxb.toXML[wsdlconsumer.ArrayOfCObjeto](_, Some("http://tempuri.org/"), Some("Objetos"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultWsdlconsumer_ArrayOfCObjetoFormat extends scalaxb.ElemNameParser[wsdlconsumer.ArrayOfCObjeto] {
    val targetNamespace: Option[String] = Some("http://tempuri.org/")
    
    override def typeName: Option[String] = Some("ArrayOfCObjeto")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[wsdlconsumer.ArrayOfCObjeto] =
      phrase(safeRep(scalaxb.ElemName(Some("http://tempuri.org/"), "cObjeto")) ^^
      { case p1 =>
      wsdlconsumer.ArrayOfCObjeto(p1 map { scalaxb.fromXML[wsdlconsumer.CObjeto](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: wsdlconsumer.ArrayOfCObjeto, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (__obj.cObjeto flatMap { scalaxb.toXML[wsdlconsumer.CObjeto](_, Some("http://tempuri.org/"), Some("cObjeto"), __scope, false) })

  }

  trait DefaultWsdlconsumer_CObjetoFormat extends scalaxb.ElemNameParser[wsdlconsumer.CObjeto] {
    val targetNamespace: Option[String] = Some("http://tempuri.org/")
    
    override def typeName: Option[String] = Some("cObjeto")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[wsdlconsumer.CObjeto] =
      phrase(opt(scalaxb.ElemName(Some("http://tempuri.org/"), "codigo")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "servico")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "cepOrigem")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "cepDestino")) ~ 
      (scalaxb.ElemName(Some("http://tempuri.org/"), "prazoEntrega")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "dataPostagem")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "dataPostagemCalculo")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "dataMaxEntrega")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "postagemDH")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "dataUltimoEvento")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "codigoUltimoEvento")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "tipoUltimoEvento")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "descricaoUltimoEvento")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "erro")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "msgErro")) ^^
      { case p1 ~ p2 ~ p3 ~ p4 ~ p5 ~ p6 ~ p7 ~ p8 ~ p9 ~ p10 ~ p11 ~ p12 ~ p13 ~ p14 ~ p15 =>
      wsdlconsumer.CObjeto(p1.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p2.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p3.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p4.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        scalaxb.fromXML[Int](p5, scalaxb.ElemName(node) :: stack),
        p6.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p7.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p8.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p9.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p10.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p11.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p12.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p13.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p14.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p15.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: wsdlconsumer.CObjeto, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(__obj.codigo map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("codigo"), __scope, false) } getOrElse {Nil},
        __obj.servico map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("servico"), __scope, false) } getOrElse {Nil},
        __obj.cepOrigem map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("cepOrigem"), __scope, false) } getOrElse {Nil},
        __obj.cepDestino map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("cepDestino"), __scope, false) } getOrElse {Nil},
        scalaxb.toXML[Int](__obj.prazoEntrega, Some("http://tempuri.org/"), Some("prazoEntrega"), __scope, false),
        __obj.dataPostagem map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("dataPostagem"), __scope, false) } getOrElse {Nil},
        __obj.dataPostagemCalculo map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("dataPostagemCalculo"), __scope, false) } getOrElse {Nil},
        __obj.dataMaxEntrega map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("dataMaxEntrega"), __scope, false) } getOrElse {Nil},
        __obj.postagemDH map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("postagemDH"), __scope, false) } getOrElse {Nil},
        __obj.dataUltimoEvento map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("dataUltimoEvento"), __scope, false) } getOrElse {Nil},
        __obj.codigoUltimoEvento map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("codigoUltimoEvento"), __scope, false) } getOrElse {Nil},
        __obj.tipoUltimoEvento map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("tipoUltimoEvento"), __scope, false) } getOrElse {Nil},
        __obj.descricaoUltimoEvento map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("descricaoUltimoEvento"), __scope, false) } getOrElse {Nil},
        __obj.erro map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("erro"), __scope, false) } getOrElse {Nil},
        __obj.msgErro map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("msgErro"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultWsdlconsumer_ListaServicosFormat extends scalaxb.XMLFormat[wsdlconsumer.ListaServicos] with scalaxb.CanWriteChildNodes[wsdlconsumer.ListaServicos] {
    val targetNamespace: Option[String] = Some("http://tempuri.org/")
    import scalaxb.ElemName._
    
    def reads(seq: scala.xml.NodeSeq, stack: List[scalaxb.ElemName]): Either[String, wsdlconsumer.ListaServicos] = seq match {
      case node: scala.xml.Node => Right(wsdlconsumer.ListaServicos())
      case _ => Left("reads failed: seq must be scala.xml.Node")
    }
    
    def writesChildNodes(__obj: wsdlconsumer.ListaServicos, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Nil


  }

  trait DefaultWsdlconsumer_ListaServicosResponseFormat extends scalaxb.ElemNameParser[wsdlconsumer.ListaServicosResponse] {
    val targetNamespace: Option[String] = Some("http://tempuri.org/")
    
    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[wsdlconsumer.ListaServicosResponse] =
      phrase((scalaxb.ElemName(Some("http://tempuri.org/"), "ListaServicosResult")) ^^
      { case p1 =>
      wsdlconsumer.ListaServicosResponse(scalaxb.fromXML[wsdlconsumer.CResultadoServicos](p1, scalaxb.ElemName(node) :: stack)) })
    
    def writesChildNodes(__obj: wsdlconsumer.ListaServicosResponse, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (scalaxb.toXML[wsdlconsumer.CResultadoServicos](__obj.ListaServicosResult, Some("http://tempuri.org/"), Some("ListaServicosResult"), __scope, false))

  }

  trait DefaultWsdlconsumer_CResultadoServicosFormat extends scalaxb.ElemNameParser[wsdlconsumer.CResultadoServicos] {
    val targetNamespace: Option[String] = Some("http://tempuri.org/")
    
    override def typeName: Option[String] = Some("cResultadoServicos")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[wsdlconsumer.CResultadoServicos] =
      phrase(opt(scalaxb.ElemName(Some("http://tempuri.org/"), "ServicosCalculo")) ^^
      { case p1 =>
      wsdlconsumer.CResultadoServicos(p1.headOption map { scalaxb.fromXML[wsdlconsumer.ArrayOfCServicosCalculo](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: wsdlconsumer.CResultadoServicos, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (__obj.ServicosCalculo map { scalaxb.toXML[wsdlconsumer.ArrayOfCServicosCalculo](_, Some("http://tempuri.org/"), Some("ServicosCalculo"), __scope, false) } getOrElse {Nil})

  }

  trait DefaultWsdlconsumer_ArrayOfCServicosCalculoFormat extends scalaxb.ElemNameParser[wsdlconsumer.ArrayOfCServicosCalculo] {
    val targetNamespace: Option[String] = Some("http://tempuri.org/")
    
    override def typeName: Option[String] = Some("ArrayOfCServicosCalculo")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[wsdlconsumer.ArrayOfCServicosCalculo] =
      phrase(safeRep(scalaxb.ElemName(Some("http://tempuri.org/"), "cServicosCalculo")) ^^
      { case p1 =>
      wsdlconsumer.ArrayOfCServicosCalculo(p1 map { scalaxb.fromXML[wsdlconsumer.CServicosCalculo](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: wsdlconsumer.ArrayOfCServicosCalculo, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      (__obj.cServicosCalculo flatMap { scalaxb.toXML[wsdlconsumer.CServicosCalculo](_, Some("http://tempuri.org/"), Some("cServicosCalculo"), __scope, false) })

  }

  trait DefaultWsdlconsumer_CServicosCalculoFormat extends scalaxb.ElemNameParser[wsdlconsumer.CServicosCalculo] {
    val targetNamespace: Option[String] = Some("http://tempuri.org/")
    
    override def typeName: Option[String] = Some("cServicosCalculo")

    def parser(node: scala.xml.Node, stack: List[scalaxb.ElemName]): Parser[wsdlconsumer.CServicosCalculo] =
      phrase(opt(scalaxb.ElemName(Some("http://tempuri.org/"), "codigo")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "descricao")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "calcula_preco")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "calcula_prazo")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "erro")) ~ 
      opt(scalaxb.ElemName(Some("http://tempuri.org/"), "msgErro")) ^^
      { case p1 ~ p2 ~ p3 ~ p4 ~ p5 ~ p6 =>
      wsdlconsumer.CServicosCalculo(p1.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p2.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p3.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p4.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p5.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) },
        p6.headOption map { scalaxb.fromXML[String](_, scalaxb.ElemName(node) :: stack) }) })
    
    def writesChildNodes(__obj: wsdlconsumer.CServicosCalculo, __scope: scala.xml.NamespaceBinding): Seq[scala.xml.Node] =
      Seq.concat(__obj.codigo map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("codigo"), __scope, false) } getOrElse {Nil},
        __obj.descricao map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("descricao"), __scope, false) } getOrElse {Nil},
        __obj.calcula_preco map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("calcula_preco"), __scope, false) } getOrElse {Nil},
        __obj.calcula_prazo map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("calcula_prazo"), __scope, false) } getOrElse {Nil},
        __obj.erro map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("erro"), __scope, false) } getOrElse {Nil},
        __obj.msgErro map { scalaxb.toXML[String](_, Some("http://tempuri.org/"), Some("msgErro"), __scope, false) } getOrElse {Nil})

  }


  trait CalcPrecoPrazoWSSoap12Bindings { this: scalaxb.SoapClientsAsync =>
    lazy val targetNamespace: Option[String] = Some("http://tempuri.org/")
    lazy val service: wsdlconsumer.CalcPrecoPrazoWSSoap = new CalcPrecoPrazoWSSoap12Binding {}
    def baseAddress = new java.net.URI("http://ws.correios.com.br/calculador/CalcPrecoPrazo.asmx")

    trait CalcPrecoPrazoWSSoap12Binding extends wsdlconsumer.CalcPrecoPrazoWSSoap {
      import scalaxb.ElemName._
      def calcPrecoPrazo(nCdEmpresa: Option[String], sDsSenha: Option[String], nCdServico: Option[String], sCepOrigem: Option[String], sCepDestino: Option[String], nVlPeso: Option[String], nCdFormato: Int, nVlComprimento: BigDecimal, nVlAltura: BigDecimal, nVlLargura: BigDecimal, nVlDiametro: BigDecimal, sCdMaoPropria: Option[String], nVlValorDeclarado: BigDecimal, sCdAvisoRecebimento: Option[String]): Future[wsdlconsumer.CResultado] = 
        soapClient.requestResponse(scalaxb.toXML(wsdlconsumer.CalcPrecoPrazo(nCdEmpresa, sDsSenha, nCdServico, sCepOrigem, sCepDestino, nVlPeso, nCdFormato, nVlComprimento, nVlAltura, nVlLargura, nVlDiametro, sCdMaoPropria, nVlValorDeclarado, sCdAvisoRecebimento), Some("http://tempuri.org/"), "CalcPrecoPrazo", defaultScope),
            Nil, defaultScope, baseAddress, "POST", Some(new java.net.URI("http://tempuri.org/CalcPrecoPrazo"))).transform({ case (header, body) => 
            scalaxb.fromXML[wsdlconsumer.CalcPrecoPrazoResponse](({
              scala.xml.Elem(null, "Body", scala.xml.Null, defaultScope, true, body.toSeq: _*)
            } \ "CalcPrecoPrazoResponse").head, Nil).CalcPrecoPrazoResult }, {
              case x: scalaxb.Fault[_] => x
              case x => x
            })
      def calcPrecoPrazoData(nCdEmpresa: Option[String], sDsSenha: Option[String], nCdServico: Option[String], sCepOrigem: Option[String], sCepDestino: Option[String], nVlPeso: Option[String], nCdFormato: Int, nVlComprimento: BigDecimal, nVlAltura: BigDecimal, nVlLargura: BigDecimal, nVlDiametro: BigDecimal, sCdMaoPropria: Option[String], nVlValorDeclarado: BigDecimal, sCdAvisoRecebimento: Option[String], sDtCalculo: Option[String]): Future[wsdlconsumer.CResultado] = 
        soapClient.requestResponse(scalaxb.toXML(wsdlconsumer.CalcPrecoPrazoData(nCdEmpresa, sDsSenha, nCdServico, sCepOrigem, sCepDestino, nVlPeso, nCdFormato, nVlComprimento, nVlAltura, nVlLargura, nVlDiametro, sCdMaoPropria, nVlValorDeclarado, sCdAvisoRecebimento, sDtCalculo), Some("http://tempuri.org/"), "CalcPrecoPrazoData", defaultScope),
            Nil, defaultScope, baseAddress, "POST", Some(new java.net.URI("http://tempuri.org/CalcPrecoPrazoData"))).transform({ case (header, body) => 
            scalaxb.fromXML[wsdlconsumer.CalcPrecoPrazoDataResponse](({
              scala.xml.Elem(null, "Body", scala.xml.Null, defaultScope, true, body.toSeq: _*)
            } \ "CalcPrecoPrazoDataResponse").head, Nil).CalcPrecoPrazoDataResult }, {
              case x: scalaxb.Fault[_] => x
              case x => x
            })
      def calcPrecoPrazoRestricao(nCdEmpresa: Option[String], sDsSenha: Option[String], nCdServico: Option[String], sCepOrigem: Option[String], sCepDestino: Option[String], nVlPeso: Option[String], nCdFormato: Int, nVlComprimento: BigDecimal, nVlAltura: BigDecimal, nVlLargura: BigDecimal, nVlDiametro: BigDecimal, sCdMaoPropria: Option[String], nVlValorDeclarado: BigDecimal, sCdAvisoRecebimento: Option[String], sDtCalculo: Option[String]): Future[wsdlconsumer.CResultado] = 
        soapClient.requestResponse(scalaxb.toXML(wsdlconsumer.CalcPrecoPrazoRestricao(nCdEmpresa, sDsSenha, nCdServico, sCepOrigem, sCepDestino, nVlPeso, nCdFormato, nVlComprimento, nVlAltura, nVlLargura, nVlDiametro, sCdMaoPropria, nVlValorDeclarado, sCdAvisoRecebimento, sDtCalculo), Some("http://tempuri.org/"), "CalcPrecoPrazoRestricao", defaultScope),
            Nil, defaultScope, baseAddress, "POST", Some(new java.net.URI("http://tempuri.org/CalcPrecoPrazoRestricao"))).transform({ case (header, body) => 
            scalaxb.fromXML[wsdlconsumer.CalcPrecoPrazoRestricaoResponse](({
              scala.xml.Elem(null, "Body", scala.xml.Null, defaultScope, true, body.toSeq: _*)
            } \ "CalcPrecoPrazoRestricaoResponse").head, Nil).CalcPrecoPrazoRestricaoResult }, {
              case x: scalaxb.Fault[_] => x
              case x => x
            })
      def calcPreco(nCdEmpresa: Option[String], sDsSenha: Option[String], nCdServico: Option[String], sCepOrigem: Option[String], sCepDestino: Option[String], nVlPeso: Option[String], nCdFormato: Int, nVlComprimento: BigDecimal, nVlAltura: BigDecimal, nVlLargura: BigDecimal, nVlDiametro: BigDecimal, sCdMaoPropria: Option[String], nVlValorDeclarado: BigDecimal, sCdAvisoRecebimento: Option[String]): Future[wsdlconsumer.CResultado] = 
        soapClient.requestResponse(scalaxb.toXML(wsdlconsumer.CalcPreco(nCdEmpresa, sDsSenha, nCdServico, sCepOrigem, sCepDestino, nVlPeso, nCdFormato, nVlComprimento, nVlAltura, nVlLargura, nVlDiametro, sCdMaoPropria, nVlValorDeclarado, sCdAvisoRecebimento), Some("http://tempuri.org/"), "CalcPreco", defaultScope),
            Nil, defaultScope, baseAddress, "POST", Some(new java.net.URI("http://tempuri.org/CalcPreco"))).transform({ case (header, body) => 
            scalaxb.fromXML[wsdlconsumer.CalcPrecoResponse](({
              scala.xml.Elem(null, "Body", scala.xml.Null, defaultScope, true, body.toSeq: _*)
            } \ "CalcPrecoResponse").head, Nil).CalcPrecoResult }, {
              case x: scalaxb.Fault[_] => x
              case x => x
            })
      def calcPrecoData(nCdEmpresa: Option[String], sDsSenha: Option[String], nCdServico: Option[String], sCepOrigem: Option[String], sCepDestino: Option[String], nVlPeso: Option[String], nCdFormato: Int, nVlComprimento: BigDecimal, nVlAltura: BigDecimal, nVlLargura: BigDecimal, nVlDiametro: BigDecimal, sCdMaoPropria: Option[String], nVlValorDeclarado: BigDecimal, sCdAvisoRecebimento: Option[String], sDtCalculo: Option[String]): Future[wsdlconsumer.CResultado] = 
        soapClient.requestResponse(scalaxb.toXML(wsdlconsumer.CalcPrecoData(nCdEmpresa, sDsSenha, nCdServico, sCepOrigem, sCepDestino, nVlPeso, nCdFormato, nVlComprimento, nVlAltura, nVlLargura, nVlDiametro, sCdMaoPropria, nVlValorDeclarado, sCdAvisoRecebimento, sDtCalculo), Some("http://tempuri.org/"), "CalcPrecoData", defaultScope),
            Nil, defaultScope, baseAddress, "POST", Some(new java.net.URI("http://tempuri.org/CalcPrecoData"))).transform({ case (header, body) => 
            scalaxb.fromXML[wsdlconsumer.CalcPrecoDataResponse](({
              scala.xml.Elem(null, "Body", scala.xml.Null, defaultScope, true, body.toSeq: _*)
            } \ "CalcPrecoDataResponse").head, Nil).CalcPrecoDataResult }, {
              case x: scalaxb.Fault[_] => x
              case x => x
            })
      def calcPrazo(nCdServico: Option[String], sCepOrigem: Option[String], sCepDestino: Option[String]): Future[wsdlconsumer.CResultado] = 
        soapClient.requestResponse(scalaxb.toXML(wsdlconsumer.CalcPrazo(nCdServico, sCepOrigem, sCepDestino), Some("http://tempuri.org/"), "CalcPrazo", defaultScope),
            Nil, defaultScope, baseAddress, "POST", Some(new java.net.URI("http://tempuri.org/CalcPrazo"))).transform({ case (header, body) => 
            scalaxb.fromXML[wsdlconsumer.CalcPrazoResponse](({
              scala.xml.Elem(null, "Body", scala.xml.Null, defaultScope, true, body.toSeq: _*)
            } \ "CalcPrazoResponse").head, Nil).CalcPrazoResult }, {
              case x: scalaxb.Fault[_] => x
              case x => x
            })
      def calcPrazoData(nCdServico: Option[String], sCepOrigem: Option[String], sCepDestino: Option[String], sDtCalculo: Option[String]): Future[wsdlconsumer.CResultado] = 
        soapClient.requestResponse(scalaxb.toXML(wsdlconsumer.CalcPrazoData(nCdServico, sCepOrigem, sCepDestino, sDtCalculo), Some("http://tempuri.org/"), "CalcPrazoData", defaultScope),
            Nil, defaultScope, baseAddress, "POST", Some(new java.net.URI("http://tempuri.org/CalcPrazoData"))).transform({ case (header, body) => 
            scalaxb.fromXML[wsdlconsumer.CalcPrazoDataResponse](({
              scala.xml.Elem(null, "Body", scala.xml.Null, defaultScope, true, body.toSeq: _*)
            } \ "CalcPrazoDataResponse").head, Nil).CalcPrazoDataResult }, {
              case x: scalaxb.Fault[_] => x
              case x => x
            })
      def calcPrazoRestricao(nCdServico: Option[String], sCepOrigem: Option[String], sCepDestino: Option[String], sDtCalculo: Option[String]): Future[wsdlconsumer.CResultado] = 
        soapClient.requestResponse(scalaxb.toXML(wsdlconsumer.CalcPrazoRestricao(nCdServico, sCepOrigem, sCepDestino, sDtCalculo), Some("http://tempuri.org/"), "CalcPrazoRestricao", defaultScope),
            Nil, defaultScope, baseAddress, "POST", Some(new java.net.URI("http://tempuri.org/CalcPrazoRestricao"))).transform({ case (header, body) => 
            scalaxb.fromXML[wsdlconsumer.CalcPrazoRestricaoResponse](({
              scala.xml.Elem(null, "Body", scala.xml.Null, defaultScope, true, body.toSeq: _*)
            } \ "CalcPrazoRestricaoResponse").head, Nil).CalcPrazoRestricaoResult }, {
              case x: scalaxb.Fault[_] => x
              case x => x
            })
      def calcPrecoFAC(nCdServico: Option[String], nVlPeso: Option[String], strDataCalculo: Option[String]): Future[wsdlconsumer.CResultado] = 
        soapClient.requestResponse(scalaxb.toXML(wsdlconsumer.CalcPrecoFAC(nCdServico, nVlPeso, strDataCalculo), Some("http://tempuri.org/"), "CalcPrecoFAC", defaultScope),
            Nil, defaultScope, baseAddress, "POST", Some(new java.net.URI("http://tempuri.org/CalcPrecoFAC"))).transform({ case (header, body) => 
            scalaxb.fromXML[wsdlconsumer.CalcPrecoFACResponse](({
              scala.xml.Elem(null, "Body", scala.xml.Null, defaultScope, true, body.toSeq: _*)
            } \ "CalcPrecoFACResponse").head, Nil).CalcPrecoFACResult }, {
              case x: scalaxb.Fault[_] => x
              case x => x
            })
      def calcDataMaxima(codigoObjeto: Option[String]): Future[wsdlconsumer.CResultadoObjeto] = 
        soapClient.requestResponse(scalaxb.toXML(wsdlconsumer.CalcDataMaxima(codigoObjeto), Some("http://tempuri.org/"), "CalcDataMaxima", defaultScope),
            Nil, defaultScope, baseAddress, "POST", Some(new java.net.URI("http://tempuri.org/CalcDataMaxima"))).transform({ case (header, body) => 
            scalaxb.fromXML[wsdlconsumer.CalcDataMaximaResponse](({
              scala.xml.Elem(null, "Body", scala.xml.Null, defaultScope, true, body.toSeq: _*)
            } \ "CalcDataMaximaResponse").head, Nil).CalcDataMaximaResult }, {
              case x: scalaxb.Fault[_] => x
              case x => x
            })
      def listaServicos(): Future[wsdlconsumer.CResultadoServicos] = 
        soapClient.requestResponse(scalaxb.toXML(wsdlconsumer.ListaServicos(), Some("http://tempuri.org/"), "ListaServicos", defaultScope),
            Nil, defaultScope, baseAddress, "POST", Some(new java.net.URI("http://tempuri.org/ListaServicos"))).transform({ case (header, body) => 
            scalaxb.fromXML[wsdlconsumer.ListaServicosResponse](({
              scala.xml.Elem(null, "Body", scala.xml.Null, defaultScope, true, body.toSeq: _*)
            } \ "ListaServicosResponse").head, Nil).ListaServicosResult }, {
              case x: scalaxb.Fault[_] => x
              case x => x
            })
    }
  }



}

